apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "lemp.fullname" . }}
  labels:
    app: {{ template "lemp.name" . }}
    chart: {{ template "lemp.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "lemp.name" . }}
      chart: {{ template "lemp.chart" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "lemp.name" . }}
        chart: {{ template "lemp.chart" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: gitclone
        image: alpine/git
        command: ["sh", "-c", "git clone https://github.com/bitnami-labs/k8s-training-resources/ /app; cd /app; git pull;"]
        volumeMounts:
        - name: nginx-data
          mountPath: /app
      containers:
      - name: nginx
        image: "bitnami/nginx:latest"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        volumeMounts:
        - name: nginx-data
          mountPath: /app
        - name: nginx-vhost
          mountPath: /bitnami/nginx/conf/vhosts
        resources:
{{ toYaml .Values.resources | indent 10 }}
      - name: php-fpm
        image: "bitnami/php-fpm:latest"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: nginx-data
          mountPath: /app
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: nginx-data
        persistentVolumeClaim:
          claimName: {{ template "lemp.fullname" . }}
      - name: nginx-vhost
        configMap:
          name: {{ template "lemp.fullname" . }}
---
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  annotations:
  name: {{ template "lemp.fullname" . }}
spec:
  maxReplicas: {{ default 5 .Values.autoscaling.maxReplicas }}
  minReplicas: {{ default 1 .Values.autoscaling.minReplicas }}
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: {{ template "lemp.fullname" . }}
  targetCPUUtilizationPercentage: {{ default 50 .Values.autoscaling.cpu }}
{{- end}}
